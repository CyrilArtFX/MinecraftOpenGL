== PETITS FIXS ==

~ Les emissive maps font n'importe quoi aled (je crois que c'est ça mais tout est plus sombre qu'avant)

~ Mettre un système de dirty sur les matrices dans transform pour les recalculer uniquement quand c'est nécessaire


== COURT TERME ==

~ Intégrer le système de lecture de meshs (tuto learnopengl) - en cours

~ Changer le duo game/scene en un trio engine/game/scene où :
	- engine correspond globalement au game actuel et s'occupe de gérer les events globaux et de dispatch l'update, le draw et les inputs (engine contiendra un pointeur vers l'interface game et plus l'interface scene)
	- game correspond à la partie logique de scene actuel et contiendra la logique propre à chaque jeu (game contiendra un pointeur vers l'interface scene)
	- scene correspond à la partie load de scene actuel et s'occupera de charger/décharger les objets

~ Mettre le système d'inputs propre

~ Mettre un système de physique basique pour le doomlike

~ Faire le doomlike (omg ?)


== MOYEN TERME ==

~ Intégrer l'ECS (attendre le cours sur le multithreading dans un engine)

~ Créer un système de HUD (intégrer le texte tout de suite ?)

~ Améliorer le système de lumière

~ Faire le système des ombres

~ Mettre un vrai système de physique


== REFLEXIONS ==

~ Mettre une classe statiques pour stocker/récupérer les meshs, shaders et materials ?